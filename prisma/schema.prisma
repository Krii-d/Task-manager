// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  username   String    @unique
  password   String
  email      String    @unique
  phone_no   String?      // Nullable field
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  // Relations
  tasks      Task[]
  categories Category[]
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}


model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  due_date    Int
  priority     Priority  @default(MEDIUM)
  status      Boolean  @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  // Foreign keys
  user_id     String
  category_id String?

  // Relations
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  category    Category? @relation(fields: [category_id], references: [id], onDelete: SetNull)
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  // Foreign keys
  user_id    String

  // Relations
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tasks      Task[]
}